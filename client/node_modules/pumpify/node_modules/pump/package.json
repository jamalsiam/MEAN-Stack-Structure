{
  "_args": [
    [
      {
        "raw": "pump@^2.0.0",
        "scope": null,
        "escapedName": "pump",
        "name": "pump",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "/home/jamal/Desktop/MEAN5 Stack Structrue/client/node_modules/pumpify"
    ]
  ],
  "_from": "pump@>=2.0.0 <3.0.0",
  "_id": "pump@2.0.0",
  "_inCache": true,
  "_location": "/pumpify/pump",
  "_nodeVersion": "8.9.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/pump-2.0.0.tgz_1512085986230_0.5930282876361161"
  },
  "_npmUser": {
    "name": "mafintosh",
    "email": "mathiasbuus@gmail.com"
  },
  "_npmVersion": "5.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "pump@^2.0.0",
    "scope": null,
    "escapedName": "pump",
    "name": "pump",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/pumpify"
  ],
  "_resolved": "https://registry.npmjs.org/pump/-/pump-2.0.0.tgz",
  "_shasum": "7946da1c8d622b098e2ceb2d3476582470829c9d",
  "_shrinkwrap": null,
  "_spec": "pump@^2.0.0",
  "_where": "/home/jamal/Desktop/MEAN5 Stack Structrue/client/node_modules/pumpify",
  "author": {
    "name": "Mathias Buus Madsen",
    "email": "mathiasbuus@gmail.com"
  },
  "browser": {
    "fs": false
  },
  "bugs": {
    "url": "https://github.com/mafintosh/pump/issues"
  },
  "dependencies": {
    "end-of-stream": "^1.1.0",
    "once": "^1.3.1"
  },
  "description": "pipe streams together and close all of them if one of them closes",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-6MYypjOvtiXhBSTOD0Zs5eNjCGfnqi5mPsCsW+dgKTxrZzQMZQNpBo3XRkLx7id753f3EeyHLBqzqqUymIolgw==",
    "shasum": "7946da1c8d622b098e2ceb2d3476582470829c9d",
    "tarball": "https://registry.npmjs.org/pump/-/pump-2.0.0.tgz"
  },
  "gitHead": "e3d0c444ceef59ff694c753303a35052e60b5186",
  "homepage": "https://github.com/mafintosh/pump#readme",
  "keywords": [
    "streams",
    "pipe",
    "destroy",
    "callback"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "mafintosh",
      "email": "mathiasbuus@gmail.com"
    }
  ],
  "name": "pump",
  "optionalDependencies": {},
  "readme": "# pump\n\npump is a small node module that pipes streams together and destroys all of them if one of them closes.\n\n```\nnpm install pump\n```\n\n[![build status](http://img.shields.io/travis/mafintosh/pump.svg?style=flat)](http://travis-ci.org/mafintosh/pump)\n\n## What problem does it solve?\n\nWhen using standard `source.pipe(dest)` source will _not_ be destroyed if dest emits close or an error.\nYou are also not able to provide a callback to tell when then pipe has finished.\n\npump does these two things for you\n\n## Usage\n\nSimply pass the streams you want to pipe together to pump and add an optional callback\n\n``` js\nvar pump = require('pump')\nvar fs = require('fs')\n\nvar source = fs.createReadStream('/dev/random')\nvar dest = fs.createWriteStream('/dev/null')\n\npump(source, dest, function(err) {\n  console.log('pipe finished', err)\n})\n\nsetTimeout(function() {\n  dest.destroy() // when dest is closed pump will destroy source\n}, 1000)\n```\n\nYou can use pump to pipe more than two streams together as well\n\n``` js\nvar transform = someTransformStream()\n\npump(source, transform, anotherTransform, dest, function(err) {\n  console.log('pipe finished', err)\n})\n```\n\nIf `source`, `transform`, `anotherTransform` or `dest` closes all of them will be destroyed.\n\n## License\n\nMIT\n\n## Related\n\n`pump` is part of the [mississippi stream utility collection](https://github.com/maxogden/mississippi) which includes more useful stream modules similar to this one.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/mafintosh/pump.git"
  },
  "scripts": {
    "test": "node test.js"
  },
  "version": "2.0.0"
}
